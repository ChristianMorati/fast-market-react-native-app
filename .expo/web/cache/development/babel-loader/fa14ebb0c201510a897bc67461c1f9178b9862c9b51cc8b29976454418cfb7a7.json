{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { ProductContext } from \"../../contexts/product-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Scanner = function Scanner(_ref) {\n  var onCodeScanned = _ref.onCodeScanned,\n    clearBarcodeData = _ref.clearBarcodeData,\n    BarCodeScannerContainerStyle = _ref.BarCodeScannerContainerStyle,\n    BarCodeScannerReScanButtonStyle = _ref.BarCodeScannerReScanButtonStyle;\n  var _useContext = useContext(ProductContext),\n    isScannerAlive = _useContext.isScannerAlive;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  useEffect(function () {\n    if (isScannerAlive) {\n      var getBarCodeScannerPermissions = function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          var _yield$BarCodeScanner = yield BarCodeScanner.requestPermissionsAsync(),\n            status = _yield$BarCodeScanner.status;\n          setHasPermission(status === 'granted');\n        });\n        return function getBarCodeScannerPermissions() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      getBarCodeScannerPermissions();\n    }\n  }, []);\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: _objectSpread(_objectSpread({}, BarCodeScannerContainerStyle), {}, {\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Solicitando permiss\\xE3o da c\\xE2mera\"\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(View, {\n      style: _objectSpread(_objectSpread({}, BarCodeScannerContainerStyle), {}, {\n        justifyContent: 'center',\n        alignItems: 'center'\n      }),\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Sem acesso a c\\xE2mera\"\n      })\n    });\n  }\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref3) {\n    var type = _ref3.type,\n      data = _ref3.data;\n    if (isScannerAlive) {\n      setScanned(true);\n      onCodeScanned(type, data);\n    }\n  };\n  return _jsxs(View, {\n    style: _objectSpread({}, BarCodeScannerContainerStyle),\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(TouchableOpacity, {\n      style: _objectSpread({}, BarCodeScannerReScanButtonStyle),\n      onPress: function onPress() {\n        setScanned(false);\n        clearBarcodeData();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Re-Escanear\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textTransform: 'uppercase'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Scanner;","map":{"version":3,"names":["React","useState","useEffect","useContext","Text","View","StyleSheet","TouchableOpacity","BarCodeScanner","ProductContext","jsx","_jsx","jsxs","_jsxs","Scanner","_ref","onCodeScanned","clearBarcodeData","BarCodeScannerContainerStyle","BarCodeScannerReScanButtonStyle","_useContext","isScannerAlive","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","_useState4","scanned","setScanned","getBarCodeScannerPermissions","_ref2","_asyncToGenerator","_yield$BarCodeScanner","requestPermissionsAsync","status","apply","arguments","style","_objectSpread","justifyContent","alignItems","children","color","handleBarCodeScanned","_ref3","type","data","onBarCodeScanned","undefined","absoluteFillObject","onPress","styles","buttonText","create","fontWeight","textTransform","container","flex"],"sources":["/home/dev/Documents/projects/react native/fast-market-react-native-app-main/src/app/components/scanner/scanner.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Text, View, StyleSheet, Button, ViewStyle, TouchableOpacity } from 'react-native';\nimport { BarCodeScanner, BarCodeEvent } from 'expo-barcode-scanner';\nimport { ProductContext } from '../../contexts/product-context';\n\ninterface ScannerProps {\n  onCodeScanned: (type: string, data: string) => void;\n  clearBarcodeData: () => void;\n  BarCodeScannerContainerStyle: ViewStyle;\n  BarCodeScannerReScanButtonStyle: ViewStyle;\n}\n\n\nconst Scanner: React.FC<ScannerProps> = ({ onCodeScanned, clearBarcodeData, BarCodeScannerContainerStyle, BarCodeScannerReScanButtonStyle }) => {\n  const { isScannerAlive } = useContext(ProductContext);\n\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    if (isScannerAlive) {\n      const getBarCodeScannerPermissions = async () => {\n        const { status } = await BarCodeScanner.requestPermissionsAsync();\n        setHasPermission(status === 'granted');\n      };\n      getBarCodeScannerPermissions();\n    }\n  }, []);\n\n  if (hasPermission === null) {\n    return (\n      <View style={{ ...BarCodeScannerContainerStyle, justifyContent: 'center', alignItems: 'center' }}>\n        <Text style={{ color: 'white' }}>Solicitando permissão da câmera</Text>\n      </View>\n    )\n  }\n\n  if (hasPermission === false) {\n    return (\n      <View style={{ ...BarCodeScannerContainerStyle, justifyContent: 'center', alignItems: 'center' }}>\n        <Text style={{ color: 'white' }}>Sem acesso a câmera</Text>\n      </View>\n    )\n  }\n\n  const handleBarCodeScanned = ({ type, data }: BarCodeEvent) => {\n    if (isScannerAlive) {\n      setScanned(true);\n      onCodeScanned(type, data);\n    }\n  };\n\n  return (\n    <View style={{ ...BarCodeScannerContainerStyle }}>\n      <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={StyleSheet.absoluteFillObject}\n      />\n      {scanned && (\n        <TouchableOpacity\n          style={{ ...BarCodeScannerReScanButtonStyle }}\n          onPress={() => {\n            setScanned(false);\n            clearBarcodeData();\n          }}>\n          <Text style={styles.buttonText}>Re-Escanear</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default Scanner;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}