{"ast":null,"code":"import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ProductContext, useProductContext } from \"../../contexts/product-context\";\nimport Home from \"../../pages/home/home\";\nimport Products from \"../../pages/products/products\";\nimport Payment from \"../../pages/payment/payment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction AuthRouter() {\n  var _React$useContext = React.useContext(ProductContext),\n    isScannerAlive = _React$useContext.isScannerAlive,\n    setIsScannerAlive = _React$useContext.setIsScannerAlive;\n  var navigation = useNavigation();\n  var productContext = useProductContext();\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused,\n            color = _ref.color,\n            size = _ref.size;\n          return _jsx(Image, {\n            source: require(\"../../../../assets/home.png\"),\n            style: {\n              width: size,\n              height: size,\n              tintColor: color\n            }\n          });\n        }\n      },\n      listeners: function listeners(_ref2) {\n        var navigation = _ref2.navigation,\n          route = _ref2.route;\n        return {\n          tabPress: function tabPress(e) {\n            if (productContext.isScannerAlive) productContext.setIsScannerAlive(false);\n          }\n        };\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Products\",\n      component: Products,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n            color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Image, {\n            source: require(\"../../../../assets/cart.png\"),\n            style: {\n              width: size,\n              height: size,\n              tintColor: color\n            }\n          });\n        }\n      },\n      listeners: function listeners(_ref4) {\n        var navigation = _ref4.navigation,\n          route = _ref4.route;\n        return {\n          tabPress: function tabPress(e) {\n            if (!productContext.isScannerAlive) productContext.setIsScannerAlive(true);\n          }\n        };\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Payment\",\n      component: Payment,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused,\n            color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(Image, {\n            source: require(\"../../../../assets/cart.png\"),\n            style: {\n              width: size,\n              height: size,\n              tintColor: color\n            }\n          });\n        }\n      },\n      listeners: function listeners(_ref6) {\n        var navigation = _ref6.navigation,\n          route = _ref6.route;\n        return {\n          tabPress: function tabPress(e) {\n            if (productContext.isScannerAlive) productContext.setIsScannerAlive(false);\n          }\n        };\n      }\n    })]\n  });\n}\nvar Tab = createBottomTabNavigator();\nexport default AuthRouter;","map":{"version":3,"names":["React","useNavigation","createNativeStackNavigator","Image","createBottomTabNavigator","ProductContext","useProductContext","Home","Products","Payment","jsx","_jsx","jsxs","_jsxs","Stack","AuthRouter","_React$useContext","useContext","isScannerAlive","setIsScannerAlive","navigation","productContext","Tab","Navigator","children","Screen","name","component","options","tabBarIcon","_ref","focused","color","size","source","require","style","width","height","tintColor","listeners","_ref2","route","tabPress","e","_ref3","_ref4","_ref5","_ref6"],"sources":["/home/dev/Documents/projects/react native/fast-market-react-native-app-main/src/app/routes/Auth/auth-router.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Image } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ProductContext, useProductContext } from '../../contexts/product-context';\nimport Home from '../../pages/home/home';\nimport Products from '../../pages/products/products';\nimport Payment from '../../pages/payment/payment';\n\n\nconst Stack = createNativeStackNavigator();\n\nfunction AuthRouter() {\n  const {isScannerAlive, setIsScannerAlive} = React.useContext(ProductContext);\n  const navigation = useNavigation()\n  const productContext = useProductContext();\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => (\n            <Image\n              source={require('../../../../assets/home.png')}\n              style={{ width: size, height: size, tintColor: color }}\n            />\n          ),\n        }}\n        listeners={({ navigation, route }) => ({\n          tabPress: (e) => {\n           if(productContext.isScannerAlive) productContext.setIsScannerAlive(false);\n          },\n        })}\n      />\n      <Tab.Screen\n        name=\"Products\"\n        component={Products}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => (\n            <Image\n              source={require('../../../../assets/cart.png')}\n              style={{ width: size, height: size, tintColor: color }}\n            />\n          ),\n        }}\n        listeners={({ navigation, route }) => ({\n          tabPress: (e) => {\n            if(!productContext.isScannerAlive) productContext.setIsScannerAlive(true);\n          },\n        })}\n      />\n      <Tab.Screen\n        name=\"Payment\"\n        component={Payment}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => (\n            <Image\n              source={require('../../../../assets/cart.png')}\n              style={{ width: size, height: size, tintColor: color }}\n            />\n          ),\n        }}\n        listeners={({ navigation, route }) => ({\n          tabPress: (e) => {\n            if(productContext.isScannerAlive) productContext.setIsScannerAlive(false);\n          },\n        })}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default AuthRouter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}