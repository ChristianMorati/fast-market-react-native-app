{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StatusBar as ExpoStatusBar } from 'expo-status-bar';\nimport Toast from 'react-native-toast-message';\nimport AuthRouter from \"./src/app/routes/Auth/auth-router\";\nimport ProductProvider from \"./src/app/contexts/product-context\";\nimport { useAuth } from \"./src/app/contexts/auth-context\";\nimport { StripeProvider } from '@stripe/stripe-react-native';\nimport PaymentProvider from \"./src/app/contexts/payment-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar STRIPE_KEY = \"pk_test_51OVM1qFEaryRg9iM5LewTPLyJpXOA25KdGqT2RwAw42nnkQo8oNI4QuHBz246nRHdwl9ibmpn93mrNkEcvLb1Z2t00vEsW0K1A\";\nfunction App() {\n  var STYLES = ['default', 'dark-content', 'light-content'];\n  var _React$useState = React.useState(STYLES[2]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    statusBarStyle = _React$useState2[0],\n    setStatusBarStyle = _React$useState2[1];\n  var _useAuth = useAuth(),\n    isLogged = _useAuth.isLogged;\n  return _jsxs(_Fragment, {\n    children: [_jsxs(NavigationContainer, {\n      children: [_jsx(ExpoStatusBar, {\n        style: statusBarStyle === 'default' ? 'light' : 'light',\n        backgroundColor: \"black\"\n      }), _jsx(StripeProvider, {\n        publishableKey: STRIPE_KEY,\n        children: _jsx(PaymentProvider, {\n          children: _jsx(ProductProvider, {\n            children: _jsx(AuthRouter, {})\n          })\n        })\n      })]\n    }), _jsx(Toast, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  buttonsContainer: {\n    padding: 0\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8\n  }\n});\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","StyleSheet","StatusBar","ExpoStatusBar","Toast","AuthRouter","ProductProvider","useAuth","StripeProvider","PaymentProvider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","STRIPE_KEY","App","STYLES","_React$useState","useState","_React$useState2","_slicedToArray","statusBarStyle","setStatusBarStyle","_useAuth","isLogged","children","style","backgroundColor","publishableKey","styles","create","container","flex","justifyContent","buttonsContainer","padding","textStyle","textAlign","marginBottom"],"sources":["/home/dev/Documents/projects/react native/fast-market-react-native-app-main/App.tsx"],"sourcesContent":["import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { StyleSheet, Text } from 'react-native';\nimport type { StatusBarStyle } from 'react-native';\nimport { StatusBar as ExpoStatusBar } from 'expo-status-bar';\nimport Toast from 'react-native-toast-message'\n\nimport AuthRouter from './src/app/routes/Auth/auth-router';\nimport ProductProvider from './src/app/contexts/product-context';\nimport { useAuth } from './src/app/contexts/auth-context';\nimport { StripeProvider } from '@stripe/stripe-react-native';\nimport PaymentProvider from './src/app/contexts/payment-context';\n\nconst STRIPE_KEY = \"pk_test_51OVM1qFEaryRg9iM5LewTPLyJpXOA25KdGqT2RwAw42nnkQo8oNI4QuHBz246nRHdwl9ibmpn93mrNkEcvLb1Z2t00vEsW0K1A\";\n\nfunction App() {\n  const STYLES = ['default', 'dark-content', 'light-content'] as const;\n  const [statusBarStyle, setStatusBarStyle] = React.useState<StatusBarStyle>(STYLES[2],);\n  const { isLogged } = useAuth();\n\n  return (\n    <>\n      <NavigationContainer>\n        <ExpoStatusBar\n          style={statusBarStyle === 'default' ? 'light' : 'light'}\n          backgroundColor='black' />\n        <StripeProvider publishableKey={STRIPE_KEY}>\n        <PaymentProvider>\n          <ProductProvider>\n            {/* { isLogged ? <AuthRouter /> : <NonAuthRouter /> } */}\n            <AuthRouter />\n          </ProductProvider>\n        </PaymentProvider>\n        </StripeProvider>\n      </NavigationContainer>\n      <Toast />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  buttonsContainer: {\n    padding: 0,\n  },\n  textStyle: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n});\n\nexport default App;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,OAAAC,UAAA;AAG/D,SAASC,SAAS,IAAIC,aAAa,QAAQ,iBAAiB;AAC5D,OAAOC,KAAK,MAAM,4BAA4B;AAE9C,OAAOC,UAAU;AACjB,OAAOC,eAAe;AACtB,SAASC,OAAO;AAChB,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAOC,eAAe;AAA2C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjE,IAAMC,UAAU,GAAG,6GAA6G;AAEhI,SAASC,GAAGA,CAAA,EAAG;EACb,IAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,cAAc,EAAE,eAAe,CAAU;EACpE,IAAAC,eAAA,GAA4CpB,KAAK,CAACqB,QAAQ,CAAiBF,MAAM,CAAC,CAAC,CAAE,CAAC;IAAAG,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/EI,cAAc,GAAAF,gBAAA;IAAEG,iBAAiB,GAAAH,gBAAA;EACxC,IAAAI,QAAA,GAAqBlB,OAAO,CAAC,CAAC;IAAtBmB,QAAQ,GAAAD,QAAA,CAARC,QAAQ;EAEhB,OACEb,KAAA,CAAAE,SAAA;IAAAY,QAAA,GACEd,KAAA,CAACb,mBAAmB;MAAA2B,QAAA,GAClBhB,IAAA,CAACR,aAAa;QACZyB,KAAK,EAAEL,cAAc,KAAK,SAAS,GAAG,OAAO,GAAG,OAAQ;QACxDM,eAAe,EAAC;MAAO,CAAE,CAAC,EAC5BlB,IAAA,CAACH,cAAc;QAACsB,cAAc,EAAEd,UAAW;QAAAW,QAAA,EAC3ChB,IAAA,CAACF,eAAe;UAAAkB,QAAA,EACdhB,IAAA,CAACL,eAAe;YAAAqB,QAAA,EAEdhB,IAAA,CAACN,UAAU,IAAE;UAAC,CACC;QAAC,CACH;MAAC,CACF,CAAC;IAAA,CACE,CAAC,EACtBM,IAAA,CAACP,KAAK,IAAE,CAAC;EAAA,CACT,CAAC;AAEP;AAEA,IAAM2B,MAAM,GAAG9B,UAAU,CAAC+B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAevB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}